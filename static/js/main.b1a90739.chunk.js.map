{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistic.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.module.css","components/FriendListItem/defaultImg.jpg","components/Container/Container.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","Profile","avatar","name","tag","location","stats","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","random","Math","floor","Statistics","title","statistics","statList","map","id","percentage","style","backgroundColor","item","key","FriendListItem","isOnline","status","width","defaultImage","FriendList","friends","Transactions","items","transactionHistory","tableTitle","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a90739.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__NA7Cj\",\"description\":\"Profile_description__1ILYF\",\"avatar\":\"Profile_avatar__3v36G\",\"name\":\"Profile_name__wih27\",\"tag\":\"Profile_tag__3YrTr\",\"location\":\"Profile_location__2d9zx Profile_tag__3YrTr\",\"stats\":\"Profile_stats__256wb\",\"label\":\"Profile_label__35u4c Profile_tag__3YrTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__R8VbS\",\"title\":\"Statistic_title__197Fd\",\"statList\":\"Statistic_statList__7HgtL\",\"item\":\"Statistic_item__23F5z\",\"label\":\"Statistic_label__xUMMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2DsrB\",\"avatar\":\"FriendListItem_avatar__3aIJo\",\"status\":\"FriendListItem_status__1KnY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1zrDi\",\"tableTitle\":\"TransactionHistory_tableTitle__2vMfS\",\"item\":\"TransactionHistory_item__3Fi9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__12CTR\"};","module.exports = __webpack_public_path__ + \"static/media/defaultImg.440b9b23.jpg\";","// Модули\nimport React from 'react';\n// Стили\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Стили\nimport styles from './Profile.module.css';\n\nconst Profile = ({ avatar, name, tag, location, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      {tag && <p className={styles.tag}>@{tag}</p>}\n      {location && <p className={styles.location}>{location}</p>}\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers </span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n\n      <li>\n        <span className={styles.label}>Views </span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes </span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  tag: '',\n  location: '',\n};\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Стили\nimport styles from './Statistic.module.css';\n\nconst random = () => Math.floor(Math.random() * 256);\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          style={{\n            backgroundColor: `rgba( ${random()} , ${random()} , ${random()}`,\n          }}\n          className={styles.item}\n          key={id}\n        >\n          <span className={styles.label}>{label} </span>\n          <span className={styles.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\nexport default Statistics;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Дефолтная картинка для defaultProps\nimport defaultImage from './defaultImg.jpg';\n// Стили\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ id, avatar, name, isOnline }) => (\n  <li className={styles.item} key={id}>\n    <span\n      className={styles.status}\n      style={{\n        backgroundColor: isOnline ? 'green' : 'red',\n      }}\n    >\n      {isOnline}\n    </span>\n    <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.defaultProps = { avatar: defaultImage };\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\nexport default FriendListItem;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Компоненты\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nconst FriendList = ({ friends }) => (\n  <ul className=\"friendList\">\n    {friends.map(({ id, avatar, name, isOnline }) => (\n      <FriendListItem\n        key={id}\n        avatar={avatar}\n        name={name}\n        isOnline={isOnline}\n      />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Стили\nimport styles from './TransactionHistory.module.css';\n\nconst Transactions = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr className={styles.tableTitle}>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id} className={styles.item}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\nTransactions.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\nexport default Transactions;\n","// Модули\nimport React from 'react';\n// Компоненты\nimport Container from './components/Container/Container';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport Transactions from './components/TransactionHistory/TransactionHistory';\n\n// Данные\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <Transactions items={transactions} />\n    </Container>\n  );\n};\n\nexport default App;\n","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Компоненты\nimport App from './App';\n// Стили\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}